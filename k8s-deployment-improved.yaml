---
# Namespace
apiVersion: v1
kind: Namespace
metadata:
  name: academic-deadline
---
# MongoDB PersistentVolume
apiVersion: v1
kind: PersistentVolume
metadata:
  name: mongodb-pv
  namespace: academic-deadline
spec:
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: local-storage
  hostPath:
    path: /var/lib/mongodb
    type: DirectoryOrCreate
---
# MongoDB PersistentVolumeClaim
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongodb-pvc
  namespace: academic-deadline
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: local-storage
---
# Mongo Secret
apiVersion: v1
kind: Secret
metadata:
  name: mongo-secret
  namespace: academic-deadline
type: Opaque
data:
  # Base64 encoded values - replace with your actual encoded values
  MONGO_INITDB_ROOT_USERNAME: cm9vdA==  # root
  MONGO_INITDB_ROOT_PASSWORD: cGFzc3dvcmQxMjM=  # password123
---
# App Secret (Use kubectl to create from command line for better security)
# kubectl create secret generic academic-deadline-secret \
#   --from-literal=EMAIL_USER=your-email@gmail.com \
#   --from-literal=EMAIL_PASS=your-app-password \
#   --from-literal=SESSION_SECRET=your-session-secret \
#   -n academic-deadline
apiVersion: v1
kind: Secret
metadata:
  name: academic-deadline-secret
  namespace: academic-deadline
type: Opaque
stringData:
  EMAIL_USER: "2002ak2002@gmail.com"
  EMAIL_PASS: "prgi uvhi dpri wlaz"
  SESSION_SECRET: "a3b2f8d23c84c5eaf8dca92b21a1c9d739e24c88b9db19e88b0d4f5e7e1c6f9d"
---
# App ConfigMap
apiVersion: v1
kind: ConfigMap
metadata:
  name: academic-deadline-config
  namespace: academic-deadline
data:
  NODE_ENV: "production"
  PORT: "3000"
  MONGO_URI: "mongodb://mongodb:27017/test"
  EMAIL_HOST: "smtp.gmail.com"
  EMAIL_PORT: "587"
---
# MongoDB Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongodb
  namespace: academic-deadline
  labels:
    app: mongodb
spec:
  replicas: 1
  strategy:
    type: Recreate  # Ensure only one MongoDB instance
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      containers:
        - name: mongodb
          image: mongo:6.0-jammy
          ports:
            - containerPort: 27017
          envFrom:
            - secretRef:
                name: mongo-secret
          resources:
            limits:
              memory: "1Gi"
              cpu: "500m"
            requests:
              memory: "512Mi"
              cpu: "250m"
          volumeMounts:
            - name: mongodb-storage
              mountPath: /data/db
          livenessProbe:
            exec:
              command:
                - mongosh
                - --eval
                - "db.adminCommand('ping')"
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            exec:
              command:
                - mongosh
                - --eval
                - "db.adminCommand('ping')"
            initialDelaySeconds: 5
            periodSeconds: 5
      volumes:
        - name: mongodb-storage
          persistentVolumeClaim:
            claimName: mongodb-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: mongodb
  namespace: academic-deadline
spec:
  selector:
    app: mongodb
  ports:
    - port: 27017
      targetPort: 27017
  type: ClusterIP
---
# App Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: academic-deadline-app
  namespace: academic-deadline
  labels:
    app: academic-deadline-app
spec:
  replicas: 2
  selector:
    matchLabels:
      app: academic-deadline-app
  template:
    metadata:
      labels:
        app: academic-deadline-app
    spec:
      containers:
        - name: academic-deadline-app
          image: academic-deadline-app:latest
          ports:
            - containerPort: 3000
          envFrom:
            - configMapRef:
                name: academic-deadline-config
            - secretRef:
                name: academic-deadline-secret
          resources:
            limits:
              memory: "512Mi"
              cpu: "500m"
            requests:
              memory: "256Mi"
              cpu: "250m"
          livenessProbe:
            httpGet:
              path: /health
              port: 3000
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /health
              port: 3000
            initialDelaySeconds: 5
            periodSeconds: 5
---
# App Service
apiVersion: v1
kind: Service
metadata:
  name: academic-deadline-service
  namespace: academic-deadline
spec:
  type: NodePort  # Changed from LoadBalancer for local development
  selector:
    app: academic-deadline-app
  ports:
    - protocol: TCP
      port: 80
      targetPort: 3000
      nodePort: 30080  # Fixed port for easy access
